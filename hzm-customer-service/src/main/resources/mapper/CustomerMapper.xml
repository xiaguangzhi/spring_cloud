<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hzm.customer.service.dao.CustomerDao">
    <resultMap id="CustomerMap" type="Customer">
        <id column="customer_id" jdbcType="BIGINT" property="customerId" />
        <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
        <result column="customer_password" jdbcType="VARCHAR" property="customerPassword" />
        <result column="customer_card_id" jdbcType="VARCHAR" property="customerCardId" />
        <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    </resultMap>
    <sql id="Customer_Column_List">
        customer_id, customer_name, customer_password, customer_card_id, customer_phone
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="CustomerMap">
        select
        <include refid="Customer_Column_List" />
        from customer
        where customer_id = #{customerId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from customer
        where customer_id = #{customerId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="Customer">
        insert into customer (customer_id, customer_name, customer_password,
        customer_card_id, customer_phone)
        values (#{customerId,jdbcType=BIGINT}, #{customerName,jdbcType=VARCHAR}, #{customerPassword,jdbcType=VARCHAR},
        #{customerCardId,jdbcType=VARCHAR}, #{customerPhone,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="Customer">
        insert into customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="customerName != null">
                customer_name,
            </if>
            <if test="customerPassword != null">
                customer_password,
            </if>
            <if test="customerCardId != null">
                customer_card_id,
            </if>
            <if test="customerPhone != null">
                customer_phone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerId != null">
                #{customerId,jdbcType=BIGINT},
            </if>
            <if test="customerName != null">
                #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="customerPassword != null">
                #{customerPassword,jdbcType=VARCHAR},
            </if>
            <if test="customerCardId != null">
                #{customerCardId,jdbcType=VARCHAR},
            </if>
            <if test="customerPhone != null">
                #{customerPhone,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Customer">
        update customer
        <set>
            <if test="customerName != null">
                customer_name = #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="customerPassword != null">
                customer_password = #{customerPassword,jdbcType=VARCHAR},
            </if>
            <if test="customerCardId != null">
                customer_card_id = #{customerCardId,jdbcType=VARCHAR},
            </if>
            <if test="customerPhone != null">
                customer_phone = #{customerPhone,jdbcType=VARCHAR},
            </if>
        </set>
        where customer_id = #{customerId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="Customer">
        update customer
        set customer_name = #{customerName,jdbcType=VARCHAR},
        customer_password = #{customerPassword,jdbcType=VARCHAR},
        customer_card_id = #{customerCardId,jdbcType=VARCHAR},
        customer_phone = #{customerPhone,jdbcType=VARCHAR}
        where customer_id = #{customerId,jdbcType=BIGINT}
    </update>
    <select id="selectByName" parameterType="Customer" resultMap="CustomerMap">
        select
        <include refid="Customer_Column_List" />
        from customer
        where customer_name = #{customerName} AND  customer_password=#{customerPassword}
    </select>
</mapper>